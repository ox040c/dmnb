// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TableProtobuf.proto

#ifndef PROTOBUF_TableProtobuf_2eproto__INCLUDED
#define PROTOBUF_TableProtobuf_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_TableProtobuf_2eproto();
void protobuf_AssignDesc_TableProtobuf_2eproto();
void protobuf_ShutdownFile_TableProtobuf_2eproto();

class TableProtobuf;

// ===================================================================

class TableProtobuf : public ::google::protobuf::Message {
 public:
  TableProtobuf();
  virtual ~TableProtobuf();

  TableProtobuf(const TableProtobuf& from);

  inline TableProtobuf& operator=(const TableProtobuf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableProtobuf& default_instance();

  void Swap(TableProtobuf* other);

  // implements Message ----------------------------------------------

  TableProtobuf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TableProtobuf& from);
  void MergeFrom(const TableProtobuf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 totalInt = 1;
  inline bool has_totalint() const;
  inline void clear_totalint();
  static const int kTotalIntFieldNumber = 1;
  inline ::google::protobuf::int32 totalint() const;
  inline void set_totalint(::google::protobuf::int32 value);

  // required int32 totalFloat = 2;
  inline bool has_totalfloat() const;
  inline void clear_totalfloat();
  static const int kTotalFloatFieldNumber = 2;
  inline ::google::protobuf::int32 totalfloat() const;
  inline void set_totalfloat(::google::protobuf::int32 value);

  // required int32 totalChar = 3;
  inline bool has_totalchar() const;
  inline void clear_totalchar();
  static const int kTotalCharFieldNumber = 3;
  inline ::google::protobuf::int32 totalchar() const;
  inline void set_totalchar(::google::protobuf::int32 value);

  // required string names = 4;
  inline bool has_names() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 4;
  inline const ::std::string& names() const;
  inline void set_names(const ::std::string& value);
  inline void set_names(const char* value);
  inline void set_names(const char* value, size_t size);
  inline ::std::string* mutable_names();
  inline ::std::string* release_names();
  inline void set_allocated_names(::std::string* names);

  // @@protoc_insertion_point(class_scope:TableProtobuf)
 private:
  inline void set_has_totalint();
  inline void clear_has_totalint();
  inline void set_has_totalfloat();
  inline void clear_has_totalfloat();
  inline void set_has_totalchar();
  inline void clear_has_totalchar();
  inline void set_has_names();
  inline void clear_has_names();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 totalint_;
  ::google::protobuf::int32 totalfloat_;
  ::std::string* names_;
  ::google::protobuf::int32 totalchar_;
  friend void  protobuf_AddDesc_TableProtobuf_2eproto();
  friend void protobuf_AssignDesc_TableProtobuf_2eproto();
  friend void protobuf_ShutdownFile_TableProtobuf_2eproto();

  void InitAsDefaultInstance();
  static TableProtobuf* default_instance_;
};
// ===================================================================


// ===================================================================

// TableProtobuf

// required int32 totalInt = 1;
inline bool TableProtobuf::has_totalint() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TableProtobuf::set_has_totalint() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TableProtobuf::clear_has_totalint() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TableProtobuf::clear_totalint() {
  totalint_ = 0;
  clear_has_totalint();
}
inline ::google::protobuf::int32 TableProtobuf::totalint() const {
  // @@protoc_insertion_point(field_get:TableProtobuf.totalInt)
  return totalint_;
}
inline void TableProtobuf::set_totalint(::google::protobuf::int32 value) {
  set_has_totalint();
  totalint_ = value;
  // @@protoc_insertion_point(field_set:TableProtobuf.totalInt)
}

// required int32 totalFloat = 2;
inline bool TableProtobuf::has_totalfloat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TableProtobuf::set_has_totalfloat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TableProtobuf::clear_has_totalfloat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TableProtobuf::clear_totalfloat() {
  totalfloat_ = 0;
  clear_has_totalfloat();
}
inline ::google::protobuf::int32 TableProtobuf::totalfloat() const {
  // @@protoc_insertion_point(field_get:TableProtobuf.totalFloat)
  return totalfloat_;
}
inline void TableProtobuf::set_totalfloat(::google::protobuf::int32 value) {
  set_has_totalfloat();
  totalfloat_ = value;
  // @@protoc_insertion_point(field_set:TableProtobuf.totalFloat)
}

// required int32 totalChar = 3;
inline bool TableProtobuf::has_totalchar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TableProtobuf::set_has_totalchar() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TableProtobuf::clear_has_totalchar() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TableProtobuf::clear_totalchar() {
  totalchar_ = 0;
  clear_has_totalchar();
}
inline ::google::protobuf::int32 TableProtobuf::totalchar() const {
  // @@protoc_insertion_point(field_get:TableProtobuf.totalChar)
  return totalchar_;
}
inline void TableProtobuf::set_totalchar(::google::protobuf::int32 value) {
  set_has_totalchar();
  totalchar_ = value;
  // @@protoc_insertion_point(field_set:TableProtobuf.totalChar)
}

// required string names = 4;
inline bool TableProtobuf::has_names() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TableProtobuf::set_has_names() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TableProtobuf::clear_has_names() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TableProtobuf::clear_names() {
  if (names_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    names_->clear();
  }
  clear_has_names();
}
inline const ::std::string& TableProtobuf::names() const {
  // @@protoc_insertion_point(field_get:TableProtobuf.names)
  return *names_;
}
inline void TableProtobuf::set_names(const ::std::string& value) {
  set_has_names();
  if (names_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    names_ = new ::std::string;
  }
  names_->assign(value);
  // @@protoc_insertion_point(field_set:TableProtobuf.names)
}
inline void TableProtobuf::set_names(const char* value) {
  set_has_names();
  if (names_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    names_ = new ::std::string;
  }
  names_->assign(value);
  // @@protoc_insertion_point(field_set_char:TableProtobuf.names)
}
inline void TableProtobuf::set_names(const char* value, size_t size) {
  set_has_names();
  if (names_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    names_ = new ::std::string;
  }
  names_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TableProtobuf.names)
}
inline ::std::string* TableProtobuf::mutable_names() {
  set_has_names();
  if (names_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    names_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:TableProtobuf.names)
  return names_;
}
inline ::std::string* TableProtobuf::release_names() {
  clear_has_names();
  if (names_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = names_;
    names_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void TableProtobuf::set_allocated_names(::std::string* names) {
  if (names_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete names_;
  }
  if (names) {
    set_has_names();
    names_ = names;
  } else {
    clear_has_names();
    names_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:TableProtobuf.names)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TableProtobuf_2eproto__INCLUDED
